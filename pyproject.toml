[project]
name = "crypto-predict"
version = "0.1"
requires-python = ">= 3.12"
dependencies = [
  "trades",
  "candles",
  "ta",
  "features",
  "news",
  "news_signals",
  "price_predictions",
  "domain",
  # python packages
  "fastapi[all]>=0.115.5",
  "loguru>=0.7.2",
  "pydantic>=2.9.2",
  "quixstreams>=3.3.0",
  "websockets>=14.1",
  "ta-lib>=0.5.1",
  "pyarrow>=18.1.0",
  "numpy>=1.26.4",
  "hopsworks>=4.1.3",
  "requests>=2.32.3",
  "httpx>=0.27.0,<0.28.0",
  "llama-index-llms-ollama>=0.5.0",
  "llama-index-llms-anthropic>=0.5.0",
  "rarfile>=4.2",
  "tqdm>=4.67.1",
  "comet-ml>=3.47.6",
  "scikit-learn>=1.6.0",
  "xgboost>=2.1.3",
  "optuna>=4.1.0",
  "graphviz>=0.20.3",
  "elasticsearch>=8.17.0",
]

[tool.uv]
dev-dependencies = [
  "pyright>=1.1.391",
  "pytest>=8.3.4",
  "ruff>=0.8.1",
]

[tool.uv.sources]
trades = { workspace = true }
candles = { workspace = true }
ta = { workspace = true }
features = { workspace = true }
news = { workspace = true }
news_signals = { workspace = true }
domain = { workspace = true }
price_predictions = { workspace = true }

[tool.uv.workspace]
members = [
  "services/*",
  "libs/*",
]


[tool.ruff]
# General Ruff settings
line-length = 88
target-version = "py312"

[tool.ruff.lint.isort]
known-first-party = [
  # services
  "trades",
  "candles",
  "ta",
  "news",
  "news_signals",
  "price_predictions",
  # libs
  "domain", 
]

[tool.ruff.lint]
select = [
  "F", # pyflakes rules
  "C", # mccabe rules
  "E", # pycodestyle error rules
  "W", # pycodestyle warning rules
  "B", # flake8-bugbear rules
  "I", # isort rules
]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pycodestyle]
# Ignore overlong task comments
ignore-overlong-task-comments = true

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

# You can keep your existing exclude list here
[tool.ruff.lint.per-file-ignores]
# Example: Ignore specific rules for specific files
# "__init__.py" = ["E402"]
