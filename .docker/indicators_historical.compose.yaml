# Docker Compose file for the Indicatores Feature Pipeline
# in historical mode

name: cryptopredict-indicators_historical

networks:
  cryptopredict-messagebus_cryptopredict-network:
    external: true
    
services:
  # ----------------------------------------
  # --- Trades service
  # ----------------------------------------
  trades:
    container_name: trades_historical
    build:
      context: ..
      dockerfile: .docker/Dockerfile
      args:
        SERVICE_NAME: trades
        PORT: 8001
    command: fastapi run app/services/trades/trades --port 8001
    ports:
      - 8101:8001
    environment:
      - TRADES_BROKER_ADDRESS=redpanda:9092
      - TRADES_KRAKEN_CONSUME_LIVE_TRADES=false
      - TRADES_BACKFILL_JOB_ID=${BACKFILL_JOB_ID}
    env_file:
      - ../services/trades/.env
    restart: on-failure
    networks:
      - cryptopredict-messagebus_cryptopredict-network

  # ----------------------------------------
  # --- Candles service
  # ----------------------------------------
  candles:
    container_name: candles_historical
    build:
      context: ..
      dockerfile: .docker/Dockerfile
      args:
        SERVICE_NAME: candles
        PORT: 8002
    command: fastapi run app/services/candles/candles --port 8002
    ports:
      - 8102:8002
    environment:
      - CANDLES_BROKER_ADDRESS=redpanda:9092
      - CANDLES_EMISSION_MODE=FULL
      - CANDLES_TRADE_INGESTION_MODE=HISTORICAL
      - CANDLES_INPUT_TOPIC=trades_historical_${BACKFILL_JOB_ID}
      - CANDLES_OUTPUT_TOPIC=candles_historical_${BACKFILL_JOB_ID}
      - CANDLES_CONSUMER_GROUP=cg_candles_historical_${BACKFILL_JOB_ID}
    env_file:
      - ../services/candles/.env
    restart: on-failure
    networks:
      - cryptopredict-messagebus_cryptopredict-network

  # ----------------------------------------
  # --- TA service
  # ----------------------------------------
  ta:
    container_name: ta_historical
    build:
      context: ..
      dockerfile: .docker/Dockerfile
      args:
        SERVICE_NAME: ta
        PORT: 8003
    command: fastapi run app/services/ta/ta --port 8003
    ports:
      - 8103:8003
    environment:
      - TA_BROKER_ADDRESS=redpanda:9092
      - TA_TRADE_INGESTION_MODE=HISTORICAL
      - TA_INPUT_TOPIC=candles_historical_${BACKFILL_JOB_ID}
      - TA_OUTPUT_TOPIC=ta_historical_${BACKFILL_JOB_ID}
      - TA_CONSUMER_GROUP=cg_ta_historical_${BACKFILL_JOB_ID}
    env_file:
      - ../services/ta/.env
    restart: on-failure
    networks:
      - cryptopredict-messagebus_cryptopredict-network

  # ----------------------------------------
  # --- Features service
  # ----------------------------------------
  features:
    container_name: features_ta_historical
    build:
      context: ..
      dockerfile: .docker/Dockerfile
      args:
        SERVICE_NAME: features
        PORT: 8004
    command: fastapi run app/services/features/features --port 8004
    ports:
      - 8104:8004
    environment:
      - FEATURES_BROKER_ADDRESS=redpanda:9092
      - FEATURES_TRADE_INGESTION_MODE=HISTORICAL
      - FEATURES_INPUT_TOPIC=ta_historical_${BACKFILL_JOB_ID}
      - FEATURES_OUTPUT_TOPIC=features_historical_${BACKFILL_JOB_ID}
      - FEATURES_CONSUMER_GROUP=cg_features_historical_${BACKFILL_JOB_ID}
      - FEATURES_FG_NAME=ta
      - FEATURES_FG_VERSION=1
      - FEATURES_FG_PK=["symbol", "timeframe"]
      - FEATURES_FG_EVENT_TIME=timestamp
      - FEATURES_FG_MATERIALIZATION_JOB_SCHEDULE="0 0/15 * * * ?"
    env_file:
      - ../services/features/.env
    restart: on-failure
    networks:
      - cryptopredict-messagebus_cryptopredict-network

